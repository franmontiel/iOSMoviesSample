//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 0 images.
  struct image {
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 1 reuse identifiers.
  struct reuseIdentifier {
    /// Reuse identifier `Movie`.
    static let movie: Rswift.ReuseIdentifier<UIKit.UITableViewCell> = Rswift.ReuseIdentifier(identifier: "Movie")
    
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.main)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 4 localization tables.
  struct string {
    /// This `R.string.commons` struct is generated, and contains static references to 3 localization keys.
    struct commons {
      /// Base translation: An error happened
      /// 
      /// Locales: Base, es
      static let errorGeneric = Rswift.StringResource(key: "error.generic", tableName: "Commons", bundle: R.hostingBundle, locales: ["Base", "es"], comment: nil)
      /// Base translation: Network issues
      /// 
      /// Locales: Base, es
      static let errorNetwork = Rswift.StringResource(key: "error.network", tableName: "Commons", bundle: R.hostingBundle, locales: ["Base", "es"], comment: nil)
      /// Base translation: Retry
      /// 
      /// Locales: Base, es
      static let retry = Rswift.StringResource(key: "retry", tableName: "Commons", bundle: R.hostingBundle, locales: ["Base", "es"], comment: nil)
      
      /// Base translation: An error happened
      /// 
      /// Locales: Base, es
      static func errorGeneric(_: Void = ()) -> String {
        return NSLocalizedString("error.generic", tableName: "Commons", bundle: R.hostingBundle, value: "An error happened", comment: "")
      }
      
      /// Base translation: Network issues
      /// 
      /// Locales: Base, es
      static func errorNetwork(_: Void = ()) -> String {
        return NSLocalizedString("error.network", tableName: "Commons", bundle: R.hostingBundle, value: "Network issues", comment: "")
      }
      
      /// Base translation: Retry
      /// 
      /// Locales: Base, es
      static func retry(_: Void = ()) -> String {
        return NSLocalizedString("retry", tableName: "Commons", bundle: R.hostingBundle, value: "Retry", comment: "")
      }
      
      fileprivate init() {}
    }
    
    /// This `R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      fileprivate init() {}
    }
    
    /// This `R.string.localizable` struct is generated, and contains static references to 0 localization keys.
    struct localizable {
      fileprivate init() {}
    }
    
    /// This `R.string.main` struct is generated, and contains static references to 3 localization keys.
    struct main {
      /// es translation: Now
      /// 
      /// Locales: es
      static let jU8F92eOTitle = Rswift.StringResource(key: "JU8-F9-2eO.title", tableName: "Main", bundle: R.hostingBundle, locales: ["es"], comment: nil)
      /// es translation: Search
      /// 
      /// Locales: es
      static let caCLvHCQTitle = Rswift.StringResource(key: "CaC-lv-HCQ.title", tableName: "Main", bundle: R.hostingBundle, locales: ["es"], comment: nil)
      /// es translation: Upcoming
      /// 
      /// Locales: es
      static let ydLW71khTitle = Rswift.StringResource(key: "YdL-W7-1kh.title", tableName: "Main", bundle: R.hostingBundle, locales: ["es"], comment: nil)
      
      /// es translation: Now
      /// 
      /// Locales: es
      static func jU8F92eOTitle(_: Void = ()) -> String {
        return NSLocalizedString("JU8-F9-2eO.title", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// es translation: Search
      /// 
      /// Locales: es
      static func caCLvHCQTitle(_: Void = ()) -> String {
        return NSLocalizedString("CaC-lv-HCQ.title", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      /// es translation: Upcoming
      /// 
      /// Locales: es
      static func ydLW71khTitle(_: Void = ()) -> String {
        return NSLocalizedString("YdL-W7-1kh.title", tableName: "Main", bundle: R.hostingBundle, comment: "")
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R {
  struct nib {
    fileprivate init() {}
  }
  
  struct storyboard {
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct main: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UITabBarController
      
      let bundle = R.hostingBundle
      let name = "Main"
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
